# https://github.com/mcauser/micropython-waveshare-epaper/tree/master/examples/2in9-hello-world
"""
MicroPython Waveshare 1.54" Black/White GDEH0154D27 e-paper display driver
https://github.com/mcauser/micropython-waveshare-epaper

MIT License
Copyright (c) 2017 Waveshare
Copyright (c) 2018 Mike Causer

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"""

from micropython import const
from time import sleep_ms
import ustruct

# Display resolution
EPD_WIDTH  = const(200)
EPD_HEIGHT = const(200)

# Display commands
DRIVER_OUTPUT_CONTROL                = const(0x01)
BOOSTER_SOFT_START_CONTROL           = const(0x0C)
#GATE_SCAN_START_POSITION             = const(0x0F)
DEEP_SLEEP_MODE                      = const(0x10)
DATA_ENTRY_MODE_SETTING              = const(0x11)
#SW_RESET                             = const(0x12)
#TEMPERATURE_SENSOR_CONTROL           = const(0x1A)
MASTER_ACTIVATION                    = const(0x20)
#DISPLAY_UPDATE_CONTROL_1             = const(0x21)
DISPLAY_UPDATE_CONTROL_2             = const(0x22)
WRITE_RAM                            = const(0x24)
WRITE_VCOM_REGISTER                  = const(0x2C)
WRITE_LUT_REGISTER                   = const(0x32)
SET_DUMMY_LINE_PERIOD                = const(0x3A)
SET_GATE_TIME                        = const(0x3B) # not in datasheet
#BORDER_WAVEFORM_CONTROL              = const(0x3C)
SET_RAM_X_ADDRESS_START_END_POSITION = const(0x44)
SET_RAM_Y_ADDRESS_START_END_POSITION = const(0x45)
SET_RAM_X_ADDRESS_COUNTER            = const(0x4E)
SET_RAM_Y_ADDRESS_COUNTER            = const(0x4F)
TERMINATE_FRAME_READ_WRITE           = const(0xFF) # aka NOOP

BUSY = const(1)  # 1=busy, 0=idle

class EPD:
    def __init__(self, spi, cs, dc, rst, busy):
        self.spi = spi
        self.cs = cs
        self.dc = dc
        self.rst = rst
        self.busy = busy
        self.cs.init(self.cs.OUT, value=1)
        self.dc.init(self.dc.OUT, value=0)
        self.rst.init(self.rst.OUT, value=0)
        self.busy.init(self.busy.IN)
        self.width = EPD_WIDTH
        self.height = EPD_HEIGHT

    LUT_FULL_UPDATE    = bytearray(b'\x02\x02\x01\x11\x12\x12\x22\x22\x66\x69\x69\x59\x58\x99\x99\x88\x00\x00\x00\x00\xF8\xB4\x13\x51\x35\x51\x51\x19\x01\x00')
    LUT_PARTIAL_UPDATE = bytearray(b'\x10\x18\x18\x08\x18\x18\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x13\x14\x44\x12\x00\x00\x00\x00\x00\x00')

    def _command(self, command, data=None):
        self.dc(0)
        self.cs(0)
        self.spi.write(bytearray([command]))
        self.cs(1)
        if data is not None:
            self._data(data)

    def _data(self, data):
        self.dc(1)
        self.cs(0)
        self.spi.write(data)
        self.cs(1)

    def init(self):
        self.reset()
        self._command(DRIVER_OUTPUT_CONTROL)
        self._data(bytearray([(EPD_HEIGHT - 1) & 0xFF]))
        self._data(bytearray([((EPD_HEIGHT - 1) >> 8) & 0xFF]))
        self._data(bytearray([0x00])) # GD = 0 SM = 0 TB = 0
        self._command(BOOSTER_SOFT_START_CONTROL, b'\xD7\xD6\x9D')
        self._command(WRITE_VCOM_REGISTER, b'\xA8') # VCOM 7C
        self._command(SET_DUMMY_LINE_PERIOD, b'\x1A') # 4 dummy lines per gate
        self._command(SET_GATE_TIME, b'\x08') # 2us per line
        self._command(DATA_ENTRY_MODE_SETTING, b'\x03') # X increment Y increment
        self.set_lut(self.LUT_FULL_UPDATE)

    def wait_until_idle(self):
        while self.busy.value() == BUSY:
            sleep_ms(100)

    def reset(self):
        self.rst(0)
        sleep_ms(200)
        self.rst(1)
        sleep_ms(200)

    def set_lut(self, lut):
        self._command(WRITE_LUT_REGISTER, lut)

    # put an image in the frame memory
    def set_frame_memory(self, image, x, y, w, h):
        # x point must be the multiple of 8 or the last 3 bits will be ignored
        x = x & 0xF8
        w = w & 0xF8

        if (x + w >= self.width):
            x_end = self.width - 1
        else:
            x_end = x + w - 1

        if (y + h >= self.height):
            y_end = self.height - 1
        else:
            y_end = y + h - 1

        self.set_memory_area(x, y, x_end, y_end)
        self.set_memory_pointer(x, y)
        self._command(WRITE_RAM, image)

    # replace the frame memory with the specified color
    def clear_frame_memory(self, color):
        self.set_memory_area(0, 0, self.width - 1, self.height - 1)
        self.set_memory_pointer(0, 0)
        self._command(WRITE_RAM)
        # send the color data
        for i in range(0, self.width // 8 * self.height):
            self._data(bytearray([color]))

    # draw the current frame memory and switch to the next memory area
    def display_frame(self):
        self._command(DISPLAY_UPDATE_CONTROL_2, b'\xC4')
        self._command(MASTER_ACTIVATION)
        self._command(TERMINATE_FRAME_READ_WRITE)
        self.wait_until_idle()

    # specify the memory area for data R/W
    def set_memory_area(self, x_start, y_start, x_end, y_end):
        self._command(SET_RAM_X_ADDRESS_START_END_POSITION)
        # x point must be the multiple of 8 or the last 3 bits will be ignored
        self._data(bytearray([(x_start >> 3) & 0xFF]))
        self._data(bytearray([(x_end >> 3) & 0xFF]))
        self._command(SET_RAM_Y_ADDRESS_START_END_POSITION, ustruct.pack("<HH", y_start, y_end))

    # specify the start point for data R/W
    def set_memory_pointer(self, x, y):
        self._command(SET_RAM_X_ADDRESS_COUNTER)
        # x point must be the multiple of 8 or the last 3 bits will be ignored
        self._data(bytearray([(x >> 3) & 0xFF]))
        self._command(SET_RAM_Y_ADDRESS_COUNTER, ustruct.pack("<H", y))
        self.wait_until_idle()

    # to wake call reset() or init()
    def sleep(self):
        self._command(DEEP_SLEEP_MODE, b'\x01') # enter deep sleep A0=1, A0=0 power on
        self.wait_until_idle()
        
        
from machine import Pin, SPI
import framebuf
## Pinout
D8 = 15
D7 = 13
D6 = 12
D5 = 14
D4 = 2
D3 = 0
D2 = 4
D1 = 5
D0 = 16

# BUSY -> D2, RST -> D4, DC -> D3, CS -> D8, CLK -> D5, DIN -> D7, GND -> GND, 3.3V -> 3.3V
spi = SPI(1, baudrate=80000000, polarity=0, phase=0)
cs = Pin(D8)
dc = Pin(D4)
rst = Pin(D1)
busy = Pin(D2)

e = EPD(spi, cs, dc, rst, busy)
e.init()
e.set_lut(EPD.LUT_FULL_UPDATE)
print("init")


w = 200
h = 200
x = 0
y = 0

### Basic Screen Clearing? #############################################
import time

def screenclear():
    e.clear_frame_memory(255)
    for i in range(10):
        e.display_frame()
        time.sleep(0.1)
        #e.clear_frame_memory(0 if i==255 else 0)
    print("cleared")
    
screenclear()

### Framebuffer #########################################################
'''
buf = bytearray(w * h // 8)
fb = framebuf.FrameBuffer(buf, w, h, framebuf.MONO_HLSB)
black = 0
white = 1
fb.fill(white)
fb.text('Hello World',0,0,black)
fb.pixel(30, 10, black)
fb.hline(30, 30, 10, black)
fb.vline(30, 50, 10, black)
fb.line(30, 70, 40, 80, black)
fb.rect(30, 90, 10, 10, black)
fb.fill_rect(30, 110, 10, 10, black)
for row in range(0,24):
	fb.text(str(row)+"               Row",0,row*8,black)

e.set_frame_memory(buf, x, y, w, h)
e.display_frame()
#e.sleep()
screenclear()
'''
### Image ###############################################################
# https://onlinejpgtools.com/images/examples-onlinejpgtools/diamond-icon.bmp
'''
$ convert demo.bmp demo.pbm
https://www.mfitzp.com/displaying-images-oled-displays/
with open('scatman.pbm', 'rb') as f:
    f.readline() # Magic number
    #f.readline() # Creator comment
    f.readline() # Dimensions
    data = bytearray(f.read())
fbuf = framebuf.FrameBuffer(data, 128, 64, framebuf.MONO_HLSB)
'''
buf = bytearray(b'\xfb\xff\xff\xff\xdf\xff\xbf\xbf\x7f~\xfb\xfb\xf7\xef\xdf\xef\xef\xdf\xdf\xff\xff\xff\xfd\xff\xfb\xff\xb9\xfd\xfb\xff\x7f\xee\xff\xff\xff\xff\xef\xff\xff\xf7\xff\xff\xf7\xff\xdf\xbb\x9dw\xfe\xff\xf7\xff\xdd\xbf\xdb\xf7\xff\xff\xff\xff~\xff\xff\xff\xff~\xff\xff~\xfd\xbf\xff\xff\xef\xdb\xdf\xff\xff\xfb\xff\xbf\xff\xe7\xd7\xe7\xff\xfe\xbd~\x7f\xff\xbd\x7f\xff\xdf\xff\xff\xff\xfd\xff\xff\xff\xff\xff\xff\xfb\xdf\xff\xf7\xef\xbd\xbf\xfe~\xfe\xbd\x7f\xfd\xbd\xff\xff\xff\xfb\xdf\xff\xff\xdb\x9f\xfd\xff\xfe\xf7\xf7\xff\xff\xff\xff\x7f\xff\xff\xff\xfe\xff\xff\xbf\xf9\xdb\xef\x7f\xff\xee\xdf\xfb_\xb5\xbf\xff\xff\xff\xff\xef\xef\xff\xff\xf7\xff\xff\xf7\xf7\xfa\xdf\xfb\xff\xfd\xad\xbf\xff\xff\xff\xff\xff\xfb~~~\xff\xfb\xef\xf7\xef\xf7\xf7\xdf\xff\xff\xff\xff\xdf\xff\xff\xff\xff\xdf\xff\xdf\xff\xff\xff\xbf\xfe\xfb\xff\xe7\xe7\xfb\xdf\xef\xe7\xbf\xbf\xff\xff\xfd\xbf\xff\xfe\xfd\xff\xfb\xff\xfb\x7f\x7f\xfe\xff\xfe\xdf\xff\xff\xff\xff\xff\xff\xfb\xfb\xfd\xad\x7f\xfe\xfd\xdf\xdf\xf7\xbf\xdb\x9f\xf7\xf7\xff\xff\x7f\xf7\xff\xff\xef~\xff\xff\x7f\x7f\x7f\xff\xf7\xff\xdd\xfd\xfd\xfd\xfb\xff\xff\xdf\xdf\xf7\xe7\xff\xfd\xfe\xff\xbf\xff\xbe~\xff\xff\xdf\xff\xff\xf7\xff\xdf\xff\xff\xff\xff\xff\xfb\xf7\xd7\xff\xdf\xff\x7f~\xff\xbd~\xff\xfd\xfd\xfd\xff\xfb\xdf\xff\x7f_\x7f\xfd\xff\xdd\xff\xff\xff\xef\xfd\x7f\xff\xff\xfe\xff\xff\xff\xf7\xf7\xdf\xdb\xef\xf7_\xfd\xfd\xfb\x7f\xb9\xfd\xfe\xfe\xff\xff\xef\xfb\xef\xff\xef\xf7\xff\xff\xff\xdf\xfd\xff\xff\x7f\xfd\xff\xff\xbf\xdf\xff\xff\xbf\xbf\x7f~\xff\xbf\xf7\xe7\xfd\xff\xf7\xe7\xdf\xff\xff\xfb\xbf\xff\xff\xf7\xe7\xfb\xff\xff\xbf\xfb\xf7\xfd\xff\xfb\xff\xff\xff\xbf\xff\xf7\xe7\xff\xff\xbf\xbf~~\xff\xef\xff\xef\xf7\xdf\xfb\xef\xef\xff\xb5\xff\xfa\xfd\xfd\xfb_\xff\xff\xdf\xdf\xee\xff\xff\xff\xdf\xff\xff\xfe\xff\xfd\xbf\xff\xff\xff\xff\xdb\xbf\x7f\x7f\x7f\xfd\xfe\xff\xf7\xf5\xff\xff\xef\xf7\xf9\x7f\x7f\xff\xbd\xdf\xff\x7f\x7f\xd7\xff\xff\xff\xdf\xdf\xff\xff\x7f\xfe\xfd\xff\xff\xe7\xff\xff\xff\xfe\xfe\xbf\xff\xff\xff\xfe\xfe\xff\xff\xff\xdf\xfd\xfd\xfd\xfb\xbd\x7f\xff\xff\xdf\xff\xe7\xe7\xff\xff\xff\xef~\xbf\xf9\xff\xff\xef\xeb\xff\xfd\xef\xdf\xf7\xbf\xff\xff\x7f\xbf\xf7\xf7\xff\xff\xbb\xff\xff\xff\xff\xfe\xdf\xef\xff\xfe\xff\xad\xdf\xfe\xfd\xdf\xfb\xff\xff\xfb\xfb\xff\x7f\xff\xff\xbf\xeb\xe7\xfb\xef\xfb\xff\xfb\xeb\xbf\xdf\xff\xff\xff\xff\xff\xff\xef\xe7\xbf\xbf\xfb\xfe\xfe\xbf\xff\xef\xf7\xef\xf7\xff\xfb\xdf\xef\xff\xff\xff\xff\xbf\xdf\xff\xff\xf7\xdf\xff\xff\xff\xff~\xfe\xff\xff\xff\xf7\xff\xef\xff\xff\xff\xfe\xfe\xfd\xdd\xee\xff\xfd_\xff\xf7\xf7\xfa\x7f\x7f\xff\xff\xfb~\xff\xff\xff\xfd\xef~\xff\xef\xef\xdd\xfd\xff\xdb\x9f\xfd~\xff\xff\xbf\xf7\xf7\xff\xff\xbb\xff~\xfe\xbd\xdf\xbf\xff~\xfd\xfd\xff\xff\xff\xff\xff\xff\xff\xfd\xbb\xff\xbf\xdf\xe7\xeb\xff\xbd~\x7f\xff\xff\xff\xbd~\xdf\xdf\xff\xff\xdf\xff\xff\xff\xbd\xff\xff\xff\xfb\xf7\xf7\xef\xff\xff\xff\xff~\xbf\xfe\xff\xff\xff\x7f\x9f\x9f\xf7\xff\xdd\xbb\xff\x7f\xfe\xdd\xff\xff\xff\xff\xfd\xff\xff\xff\xff\xfe\xef\xf7\xff\x7f\xff\xfd\xfb\xff\xb9\xfd\xfb\xff\xf7\x7f\xdf\xfe\xfe\xff\xff_\xf7\xef\xe7\xef\xfb\xfb\xff\xf7\xfd\xfd\xff\xff\xfd\xff\xff\xff\xef\xdf\xdf\xff\xbf\xbf~~\xff\xdf\xdf~\xfe\xfe\xfd\xf7\xe7\xff\xff\xbf\xbf\xbf~\xfe\xfd\xfd\xff\xfb\xff\xfe\xfd\xff\xff\xfd\xf7\xff\xff\xff\xff\xff\xff\xff\xbf\xbf\xfe\xfe\xfe\xff\xff\xff\x7f\xfe\xff\xb9\x7f\x7f\xfd\xfd\xdf\x7f~\xff\xff\xff\xff\xff\xff\xfa\xfe\xff\xff\xef\xff\xff\xff\xf7\xef\xf7\xff\xff\xff\x7f_\xfe\xff\xff\xf7\xeb\xeb\xd7~\xfe\xff\xfb\xfb\xf7\xff\xe7\xe7\xe7\xff\xfd\xdf\xff\xef\xef\xdf\xff\xff\xfd\xbb\xe7\xef\xef\xff\xbe\x7f\xff\xbf\xdf\xd7\xdf\xf7\xef\xff\xfb\xdf\xff\xff\xeb\xfb\xfd\xfd\xff\xff\xff\xff\xff\xff\xef\xff\xff\xbb\xfb\xf7\xff\xf7\xff\xff\xef\xef\xff\xff\xdb\xff\xef\xef\xdf\xaf\xf7\xf7\xff\xff\x7f\xfe\xff\xff\xbf\xbf\x7f\xff\xff\xff\xff\xff\xff\x7f\xed\xdf\xff\xff\xfe\xfd\xfb\xdf\xff~~\xfd\xbf\xef\xe7\xff\xff\xff\x7f\xfd~~~\xbf\xfd\xbf\xff\xfe\xfe\xff\xff\xff\xff\xdf\x7f\xfe\xbf\xfd\xf7\xdf\xff\xfd\xfd~\x7f\x7f\xbf\xfd\xfe\x7f\xff\xff~\xbf\xbf\xdf\xff\xfb\x7f\xff\x7f\xff\xff\xff\xf7\xfb\xb7\xff\xff\xff\xff\xfe\xff\x7f\xfe\xfd\xfd\xff\xff\xee\xff\xdf\xaf\xfd\xff\xff\xfe\xf7~\xff\xdb\xff\xf7\xf7\xff\xff\xff\xff\xf7\xff\xdf\xdd\xff\xef\xff\xdb\xf7\xff\xff\xe7\xef\xfb\xdf\xff\xfd\xff\xff\xdf\xff\xd7\xd7\xfb\xe7\xff\xf7\xfd\xff\xef\xfb\xff\xff\xfd\xff\xfb\xff\xeb\xbf\xff\xbd\x7f\xff\xfb\xff\xe7\xf7\xf7\xdf\xff\xe7\xd7\xdf\xff\xe7\xff\xdf\xff\xff\xfe\xbf\xf7\xff\xf7\xff\xff\xff\xff\xef\xff\xff\xff\xff\xf7\xef\xff\xff\x7f_\xff\xf7\xf7\xff\x7f\xdf\xf7\xff\xff\x7f\xee\xff\xf7\x9d\xff\xee\xff\xfe\xfe\x7f\xfe\xff\xff\xfd\xfd\xff\x7f\xff\xb9\xfb\xfd\xff~\xfe\xff\xbf\xef\xdf\xff\xdf\xbf\xbf\xbf\x7f\xff\x7f\xbf\x7f\xff\xff\xfe\xfd\xfb\xff\xbf\xff\xdf\xbf\xbf\xfb\xff\xff\xfb\xfd\xff\x7f~~\xfe\xff\xfb\x7f~\xbf\x7f~\xfd\xff\xff\xff_\xff\xed\xff\xff\xf9\xfb\xff\xdf\xfb\xff\xff\xff\x7f\xfe\xff\xff\xff\xfe\xfe\xff\xff\xdf\xbf\xf7\xfd\xdb\xff\xff\xd7\xbf\xbf~\xfd\xbf\xff\xff\xff\xff\xef\xf7\xff\xff\xff\xff\xff\xff\xdd\xbb\xff\xff\xff\xff\xeb\xff\xff\xfb\xff\xff\xfb\xe7\xe7\xef\xef\xfd\xdf\xe7\xe7\xf7\xf7\xe7\xe7\xff\xff\xbb\xfb\xff\xff\xff\xff\xff\xff\xdd\xff\xff\xf7\xef\xe7\xeb\xdf\xff\xf7\xef\xdf\xd7\xef\xff\xff\xff\xff\xbf\xff\xd7\xf7\xff\xdd\xfd\xff\x9f\xfd\xff\xff\xff\xff\xff\xff\xff\xff\xf7\xff\xff\xef\xbf\xf9~\xfb\xb5\xff\x7f\xad\xdf_\xef\xfb_\xff\xff\xff\xff\x7f\xed\xff\xff\x7f\xff\xff\xff\xfa\xdf\xff\xff\xff\xfb\xfd\xff\xff\xff\xff\xff\xff~~~\xfe\xfd\xbf~~\xff\x7f~~\xff\xff\xdf\xff\xff\xff\xff\xff\xff\xfe\xfd\xff\xf7\xdf\xff\xf7\xdf\xff\xf7\xdf\xbf\xf7\xbe\xbf\xfd\xff\xff\xfb\xbf\xbf\x7f\x7f\xfd\xfd\xef\xff\xbb\xff\xff\xbd\xff\xff\xbb\xff\xff\xfd\xff\xff\xfe\xff\xdf\xfb\xef\xbb\xbb\xf7\xf7\xdf\xdd\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xef\xff\xff\xfd\xef\xfe\xff\xff\xbf\xdf\xfd\xff\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xf7\xfb\xe7\xdf\xbf\xff\xff\xff\xfb\xfb\xff\xffp\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xdf\xff\xff\xff\xbf\xf9\xf9\xfe\xff_\x9f\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00{\xf7\xef\xbf\xfe\xff\xdf\xbf\xff\xfe\xfd\xfd\xe0\xff\xfb\xff\xff\xfd\xff\xff\xfd\xff\xff\xfcp\x7f\x7f\xfe\xfe\xdf\xef\xff\xff\xbf\xbf\xff\xff\xc1\xff\xf3\xff\xff\xf9\xff\xff\xfd\xff\xff\xfex\x1f\xff\x7f\xfb\xfd\xfb~~\xfd\xfd\xfb\xef\x83\xff\xf3\xff\xff\xfd\xff\xff\xfc\xff\xff\xff|\x1f\xff\xff\xff\xdf\xfb\xff\xff\x7f\x7f\xff\xf7\x87\xff\xe7\xff\xff\xfd\xff\xff\xfe\xff\xff\xff<\x17\xbf\x9d\xef\xf7\xef\xff\xff\xff\xff\xef\xff\x07\xff\xef\xff\xff\xf9\xff\xff\xfc\xff\xff\xff\x9e\x0f\xbb\xff\xff\x7f\xff\xf7\xef\xef\xdf\xbf~\x0f\xff\xcf\xff\xff\xf9\xff\xff\xfe\xff\xff\xff\x8f\x07\xff\xff\xbd\xff\xbf\xd7\xe7\xfb\xfd\xff\xfe\x0f\xff\xcf\xff\xff\xf9\xff\xff\xfe\xff\xff\xff\xcf\x83\xff\xff\xff\xfd\xff\xff\xff\xef\xef\xfe\xfc\x1f\xff\xdf\xff\xff\xfb\xff\xff\xfe\x7f\xff\xff\xcf\x83\xf9\xdb~\xf7\xfe\xff\xff\xfe\xfe\xef\xe8\x1f\xff\x9f\xff\xff\xf9\xff\xff\xff\x7f\xff\xff\xe7\xc1\xdf\xfb\xff\xff\xef\x7f~\xff\xff\xfb\xf8\x7f\xff\x9f\xff\xff\xfb\xff\xff\xff\x7f\xff\xff\xf7\xc1\xff\xff\xfb\xdf\xfb\xfd\x7f\x7f\xdf\xff\xf0\x7f\xff?\xff\xff\xfb\xff\xff\xff?\xff\xff\xf3\xf0\xef\xff\xef\xf7\xdf\xff\xff\xfe\xff^`\xff\xff\x7f\xff\xff\xf3\xff\xff\xff?\xff\xff\xf9\xf0w\xad\xff\xef\x7f\xff\xff\xef\xef\xff\xe0\xff\xfe\x7f\xff\xff\xf3\xff\xff\xff?\xff\xff\xf9\xf0\x7f\xff\xff\xff\xfe\xe7\xe7\xff\xfb\xff\xc1\xff\xfe\xff\xff\xff\xf3\xff\xff\xff?\xff\xff\xfc\xf8>\xff\xbd\x7f\xff\xff\xff\xe7\xff\xff\x83\xff\xfc\xff\xff\xff\xf3\xff\xff\xff\xbf\xff\xff\xfe\xfc\x1f\xff\xff\xfe\xbb\xef\xf7\xff\xff\xf7\x87\xff\xfc\xff\xff\xff\xf3\xff\xff\xff\x9f\xff\xff\xfe~\x1f\xdb~\xff\xff\xff\xff\xffw_\x07\xff\xfd\xff\xff\xff\xf3\xff\xff\xff\x9f\xff\xff\xff~\x0e\xff\xff\xff\xf7~~\xfd\xfd\xfe\x0f\xff\xfb\xff\xff\xff\xf7\xff\xff\xff\x9f\xff\xff\xff?\x07\xfb\xf7\xeb\xff\xff\xfd\xdf\xff\xfe\x0f\xff\xf3\xff\xff\xff\xf7\xff\xff\xff\xdf\xff\xff\xff\x9f\x07\xff\xf7\xef\xbf\xfe\xff\xff\xbf\xec\x1f\xff\xf3\xff\xff\xff\xf7\xff\xff\xff\xdf\xff\xff\xff\x9f\x82\xba\xff\xff\xfb\xef\xf7\xdb\xfb\xf8\x1f\xff\xf7\xff\xff\xff\xf3\xff\xff\xff\xcf\xff\xff\xff\xcf\xc1\xff\xff\xff\x7f\xfb\xdf\xff\xbf\xf8?\xff\xe7\xff\xff\xff\xe7\xff\xff\xff\xcf\xff\xff\xff\xef\xe1\xff\xbd~\xff\xef\xff\xff\xfbp\x7f\xff\xc7\xff\xff\xff\xe7\xff\xff\xff\xcf\xff\xff\xff\xf7\xe0\xfe\xff~\xfd\xff\xef\xff\xfe\xe0\xff\xff\xcf\xff\xff\xff\xf7\xff\xff\xff\xef\xff\xff\xff\xf3\xf0\x7f~\xff\xf7\x7f\xfe\xb5\xbf\xe0\xff\xff\xcf\xff\xff\xff\xe7\xff\xff\xff\xef\xff\xff\xff\xf3\xf0?\xff\xff\xdf\xfd\xbf\xff\xff\xc1\xff\xff\xdf\xff\xff\xff\xef\xff\xff\xff\xe7\xff\xff\xff\xf9\xf87\xef\xf7\xff\xff\xfb\xff\xff\x83\xff\xff\xbf\xff\xff\xff\xe7\xff\xff\xff\xf7\xff\xff\xff\xfd\xfc\x1b\xe7\xe7\xff\xbf\xff\xdf\xfb\x82\xef\xbe\x0e\xfb\xfb\xf7\xe3\xef\xbd\xef\xc3\xbd\xff\xefx\xf8\x1f\xff\xff\xfb\xfe\xf7\xdb\x9f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\xff\xff\xaf\xfb\xdf\xff\xff\x01\xed\xfb\x87\x9b[W\x0f\xdd\xfaw\xe2\xb9W\xd5Q\xd8\x0f\xfe\xfe\xff\xbf\xff\xff\xff\x81\xff\xff\xcf\xff\xff\xff\xcf\xff\xff\xff\xf3\xff\xff\xff\xf7\xfc\x1f\x7f\x7f\xff\xfb\xff\xff\xfd\xc0\xff\xff\xe7\xff\xff\xff\xcf\xff\xff\xff\xf3\xff\xff\xff\xe7\xf0?\xff\xff\xfd\x7f\xee\xb9\xdd\xe0\xff\xff\xf7\xff\xff\xff\xef\xff\xff\xff\xe7\xff\xff\xff\xcf\xe0m\xef\xff\xdf\xff\xbf\xff\xff\xf0?\xff\xf3\xff\xff\xff\xef\xff\xff\xff\xef\xff\xff\xff\x9f\xe0\xff\xf7\xe7\xfd\xfb\xff\xfd\xff\xf0\x1f\xff\xf9\xff\xff\xff\xef\xff\xff\xff\xcf\xff\xff\xff?\x81\xbf~~\xff\xff\xfa\xdf\xf7\xfc\x0f\xff\xfd\xff\xff\xff\xe7\xff\xff\xff\xcf\xff\xff\xff?\x03\xfe\xff\xff_\xdb\xbf\xfe\xbf\xbe\x07\xff\xfc\xff\xff\xff\xe7\xff\xff\xff\xcf\xff\xff\xfe\xfe\x05\xff\xff\xff\xfd\xff\xff\xff\xfb\xff\x07\xff\xfe\xff\xff\xff\xe7\xff\xff\xff\xdf\xff\xff\xfc\xfe\x0f\xfb\xf7\xef\xff\xff\xdf\xff\xff\xfb\x81\xff\xff?\xff\xff\xf7\xff\xff\xff\x9f\xff\xff\xf9\xf8\x1f\xdf\xe7\xe7\xff\xff\xfd\xaf\xfe\xdf\xc0\xff\xff?\xff\xff\xf7\xff\xff\xff\xbf\xff\xff\xf3\xf0;\xf7\xff\xff\xbb\xad\xdf\xfb\x7f\xff\xc0\xff\xff?\xff\xff\xf3\xff\xff\xff\xbf\xff\xff\xe7\xe0\x7f\x7f\xff\xff\xfb\xff\xff\xff\xdf\xbe\xf0?\xff\x9f\xff\xff\xf7\xff\xff\xff?\xff\xff\xc7\xc0\xdf\xff\x7f~\xff\xff\xff\xdf\xff\x7f\xf8\x1f\xff\xcf\xff\xff\xfb\xff\xff\xff?\xff\xff\xcf\x81\xff\xfe\xfd\xbf\xff\xfd\xfd\xf7\xf7\xff\xfc\x0f\xff\xc7\xff\xff\xf3\xff\xff\xfe\x7f\xff\xff\x9f\x83\xfb\x7f\xff\xff\xbf\xdd\xdd\xff\xff\xff\\\x07\xff\xf7\xff\xff\xf3\xff\xff\xfe\x7f\xff\xff>\x07\xdb\xf7\xff\xff\xbb\xff\xff\xfd\xbb\xe7\xff\x07\xff\xf3\xff\xff\xf9\xff\xff\xfe\x7f\xff\xfe|\x0f\xff\xff\xe7\xe7\xff\xff\xff\x7f\xff\xff\xff\x81\xff\xf9\xff\xff\xfb\xff\xff\xfe\xff\xff\xfe|\x1e\xff\xeb\xff\xff\xff\x9f\x9f\xff~\xf7\xef\xc0\xff\xf9\xff\xff\xf9\xff\xff\xfc\xff\xff\xf8\xf0?\xff\xff\xef\xf7\xf9\xfd\xfb\xf7\xff\xff\xfb\xc0\xff\xfc\xff\xff\xf9\xff\xff\xfd\xff\xff\xf3\xe0\x7f\x9d\xff\xff\xff\xbf\xff\xff\xdf\xdf~\xff\xf0?\xfc\xff\xff\xf9\xff\xff\xf9\xff\xff\xf3\xe0\xe7\xff\xbf~~\xff\xfb\xfb\xfb\xf7\xfd\xff\xf8\x1f\xfe\x7f\xff\xfd\xff\xff\xf9\xff\xff\xe7\x81\xdf\xff\xff\xbf\x7f\xff\xef\xef\xef\xff\xb7\xfd|\x0f\xff?\xff\xfd\xff\xff\xf9\xff\xff\xcf\x83\xf7\xfd\xfb\xff\xff\xfd\xff\xff\xff\xff\xff\xdf\xdc\x0f\xff?\xff\xfc\xff\xff\xfb\xff\xff\x9e\x07\xff\xdd\xbf\xef\xff_\xbf\x7f\xfe}\xff\xfd\xff\x07\xff\x9f\xff\xfc\xff\xff\xf3\xff\xff\x9e\x0f\xfd\xff\xfb\xfb\xd7\xff\xff\xfe\x7f~\xfb\xff\xef\x81\xff\xcf\xff\xfc\xff\xff\xf7\xff\xfe<\x1e\x7f\xff\xff\xff\xf7\xff\xfe\xff\xff\xff\xef_\xf7\xc0\xff\xcf\xff\xfc\xff\xff\xe7\xff\xfex?\xff\x9f\xfd\xf7\xff\xdd\xef\xef\xef\xff\xff\xfd\xff`\xff\xe7\xff\xfe\xff\xff\xe7\xff\xfc\xf0\x7f\xf7\xfb_\x7f\xfe\xfd\xfb\xfb\xfb\xef\xdf\xff\x7f\xf0?\xf7\xff\xfe\xff\xff\xe7\xff\xfd\xe0\xd7\xdf\xff\xff\xfd\xbf\xff\xdf\xef\xe7\xf7\xfd\xbf\xfd\xf0\x1f\xfb\xff\xfe\x7f\xff\xcf\xff\xfb\x81\xff\xfb\xdf\xff\xbf\xff\xff\xff\xff\xff\xffw\xfe\xff\xfc\x0f\xf9\xff\xfe\xff\xff\xcf\xff\xf3\x83\xf7\xff\xff\xfb\xff\xfd\xad~\xff\xff\xff\xff\xff\xff\xbe\x0f\xfc\xff\xfe\x7f\xff\xdf\xff\xc6\x07\xbf~\xf7\xbf\xef\x7f\xff\xff\xbe\x7f~\xff\xfb\xd7\xff\x07\xfc\xff\xfe\x7f\xff\x9f\xff\xce\x06\xfb\xff\xfd\xfb\xfb\xdf\xff\xbb\x7f\xfe~\xfb\xdf\xff\xdf\x81\xfe\x7f\xff\x7f\xff\x9f\xff\x98\x1f\xff\xdd\xff\xff\xff\xfd\xff\xff\xfe\xff\xff\xef\xf7\xef\xfb\xc0\xff?\xff\x7f\xff\xbf\xff8\x1f\xfe\xff\x7f\xfd\xff\xef\xd7\xf7\xff\xff\xff\xff\x7f\xfe\xdf`\xff?\xff?\xff?\xff 7\x7f\xef\xfb\x7fw\xfe\xff\xff\xf7\xe7\xef\xdf\xff\x7f\xff\xf0\x7f\x9f\xff?\xff\x7f\xfe`\xff\xdf\xff\xbf\xdf\xfd\xff\xfb\xbf\xdf\xfe\xff\xfd\xff\xff\xff\xf0\x1f\xcf\xff\xbf\xff\x7f\xfc\xc1\xff\xff\xbf\xff\xdf\xff\xbf\xef\xfb\x7f\x7f\xfe\xff\xb5\xfd\xfb\xfc\x1f\xcf\xff?\xfe\x7f\xf9\x01\xfb\xdf\xfb\x9f\xff\x7f\xee\xff\x7f\xfd\xf7\xef\xf7\xff\xdd\xbb\xbe\x0f\xe7\xff\xbf\xfe\xff\xf2\x07\xbf\xfd\xbf\xfd\xeb\xf7\xff\xff\xff\xff\xff\xfb\xdf\xff\xff\xff\xff\x07\xf7\xff\xbf\xfe\xff\xf2\x07\xfb\xdf\xff\xff\xff\xbf\xff\xbd\xfd\xfb\xe7\xef\xff\xff\xff\xff\xf7\x81\xf3\xff\xbf\xfe\xff\xc4\x1f\xff\xff\xff\xff\xff\xfb\xdf\xff\xf7\xbf\xff\xff\xff\xdb\x9f\xfd\xdf\xc0\xf9\xff\x9f\xfc\xff\xc0\x19\xfd\xbf\xf5\xdb\xff\xfe\xf7~\xdf\xfb\xff\x7f\xee\xff\xfd\x9f\xff\xa0\xf8\xff\x9f\xf9\xff\x80\x7f\x7f\xfe\xdf\xfb\xb7\xff\xff\xff\xff\xff\xbf\xfd\xbf\xdf\xff\xff\xdf\xf0|\xff\x9f\xf9\xff\x00\x7f\xdf\xfb\xff\xff\xfd\xbf\xfd\xf7\xff\xff~~\xff\xff\xff\xff~\xf8\x1e\x7f\x9f\xf9\xfe\x00\xdf\xff\xff\xfb\xff\xff\xfd\xbf\xef\xfb_\xff\xff\xfe\xfd\xdf\xfb\xffx\x1f?\xcf\xfb\xfc\x03\xff\xf7\xef\xff\xbf\xbf\x7f\xfe\xff\x9f\xfd\xf7\xff\xef\xdf\xf7\xbf\xff\xde\x0f?\xcf\xf3\xf8\x03\xf7\xbf\xfd\xef\xbb\xfb\xff\xef\xff\xff\xff\xff\xf7\xfd\xfd\xfd\xfb\xf7\xfe\x07\xbf\xdf\xf7\xf8\x0f\xfd\xfb\xdf\xbf\xff\xbf\xef\xff\xbd\xff\xff\xe7\xe7\xdf\xdf\xff\xff\xe7\xff\x01\x8f\xef\xe7\xf0\x0f\xff\xff\xff\xff\xff\xff\xeb\xd7\x7f\xdd\xbb\xff\xff\x7f\x7f\x7f\xfd\xff\xeb\xc0\xcf\xcf\xe7\xe0>\x7f\xfd\x7f\xfe\xf9\xfa\xff\xff\xfe\xfd\xfb\xff\xff\xff\xfd\xfb_\xff\xff\xc0\xef\xcf\xef\xc0?\xf7\x7f\xfe\xef\xbf\xbf\xff\xff\xff\xff\xff\x7f~\xfd\xff\xbf\xff~\xff\xf0s\xef\xcf\x80\xfb\xdf\xdf\xfb\xfb\xff\xff\xfe\xfd\xf7\xff\xdf\xbf\x7f\xe7\xe7\xfd\xff\xfd\xff\xf83\xe7\xcf\x80\xf7\xff\xf7\xef\xff\xbf\xbf\x7f~\xef\x9d\xff\xfe\xff\xff\xff\xdf\xf7w\xfe\xf8\t\xe7\xdf\x03\xff\xf7\xff\xff\xef\xff\xfe\xff\xff\xff\xff\xef\xef\xff\xff\xff\xfe\xff\xff\xef~\x08\xe7\xde\x03\xff\xff\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xfb\xff\xe7\x7f~\xff\xbd\xff\xfd\xde\x00\xf7\x9c\x07~\xbd~~\xbd\xfb\xfb\xd7\xef~\xff\xff\xdf\xff\xfe\xff\xbf\xff\xfb\xdf\xeb\x00\xe7\x18\x0f\xbe\xff~~\xff\xbf\xdf\xf7\xe7~\xdb\xff\xf7\xf7\xff\xff\xef~\xef\x7f\xff\xc0w0\x1f\xff~\xff\xff~\xf7\xf7\xff\xff\xff\xffw\xff\xff\xff\xff\xff\xff\xff\xfd\xff\xc07 ?\xff\xff\xff\xff\xff\x7f\x7f\xff\xff\xff\xfb\xfd\xfd~\xe7\xe7\xfb\xdf\xdf\xff~\xf0\x13 \xfd\xef\xdf\xef\xf7\xf7\xff\xff~~\xf7\xff\xff\xff\x7f\xef\xf7\xef\xff\xfd\xbf\xfd\xf0\x02\x01\xfb\xfb\xfb\xeb\xe7\xdf\xfb\xfd\x7f\xfe\xef\xbf\x7f\x7f\xff\xff\xff\xf7\xf7\x7f\xfe\xff\xf8\x02\x01\xef\xef\xef\xff\xff\xf7\xff\x7f\xfe\xff\xff\xfb\xf7\xf7\xff\x7f\xff\xff\xff\xf7\xff\xff\xfc\x00\x03\xff\xff\xff\xff\xff\xff\xd7\xf7\xff\xff\xff\xbf\xbf\xdf\xd7\xfe~\xfe\xbd\xff\xf7\xe7\x7f\x00\x07\xfe\xfe\xfe\xfe\x7f\x7f\xff\xff\xf7\xe7~\xff\xfb\xf7\xf7\xbd\xbe\x7f\xff\xfb\xdf\xff}\x00\x0f\xbf\x7f\x7f\x7f\xfe\xfe\xff\xeb\xd7\xff~\xfa\xfe\xff\xff\xff\xff\xff~\xef\xf7\xef\xff\xc0\x1e\xff\xff\xff\xff\xff\xff\xff\xff\xff\xef\xff\xbf\xbf\xfe\xfe\xff\xff\xf7\xff\xff\xff\xff\xef\xc0\x7f\xef\xef\xef\xef\xf7\xf7\xed\xff\xff\xff\xff\xff\xff\xbf\x7f\xf7\xef\xdf\xef\xbf\x7f~\xff\xf0\x7f\xfb\xf7\xfb\xf7\xef\xdf\xbf\xbf\x7f~\xef\xff\xff\xff\xff\xef\xff\xbf\xff\xfd\xff\xfb\xff\xe1\xff\xbf\xbf\xfe\xfd\xff\xff\xfb\xff\xfd\xff\xf7\xdf\xdf\xbf\xbf\xff\xef\xfb_\x7f\xfe\xff\xf9\xfd\xbf\xff\xfe\x7f\x7f\xfd\xfd\xff\xfa\xdf\xf7\xff\xf7\xf5\xfa\xfe~\xfd\xbf\xfd\xf7\xef\xf7\xbf\xff\xf9\xfe\xff\xff\xff\x7f_\xdb\xbf\xfe\xbf\xff\xfd\xff\xff\xfb\xff\xdf\xff\xff\xff\xfd\xdf\xff}\xff\xfb\xfb\xef\xef\xdf\xff\xff\xff\xff\xfb~\xff\xff\xff\xbf\xbd\xff\xff\xff\xfb\xdf\xff\xff\xff\xff\xbf\xdf\xeb\xfb\xfd\xfd\xff\xdf\xff\xff\xbe\x7f\xbf\xbb\xfb\xff\xbf\xf5\xbb\xef\x7f\xff\xdb\xff\xbb\xf7\xf7\xff\xef\xef\xdf\xff\xfd\xaf\xfe\xff\xfb\xfb\xbf\xbf\xff\xfe\xdf\xfb\xff\xff\xed\xdf\xeb\xbf\x7f\x7f\xff\xff\xfe\xfd\xad\xdf\xfb\x7f\xff\xbf\xbf\xff\xff\xf7\xfb\xff\xff\xbf\xfd\xbf\xff\xff\xff\xff\xff\xfe\xfe\xff\xff\xff\xff\xff\xdf\xef\xff\xff\xff\xfd\xdf\xbf\xff\xff\xfe\x7f\xff\xff\xdf\xff\xfb\xfd~\xbf\xbf\xdf\xff\xff\xdf\xff\xf7\xf7\xfa\xfb\xb7\xf7\xf7\xfd\x9d\x7f\xfe\xfd\xfd\x7f\xb5\xff\x7f\xff\xff\xee\xff\xfd\xfd\xf7\xf7\xff\xff\xbf\xdb\xff\x7f\x7f_\xff\xf7\xff\xdf\xdd\xfd\xff\xd7\xf7\xff\xef\xff\xdb\xdd\xdd\xff\xff\xfe\xbb\xff\xff\xff\xff\xff\xff\xff\xff\xf7\xfd\xff\xff\xff\xff\xff\xef\xfb\xff\xff\xff\xff\xfd\xbb\x7f\xff\xff\xff\xfb\xfd\xfd\xff\xff\xeb\xd7\xff\xff\xfb\xff\xff\xeb\xe7\xff\xdf\xff\xff\xff\x7f\xff\xbd\xfe\xdd\xff\xef\xff\xf7\xdd\xdb\xff\xff__\xbf\xdb\xff\xff\xff\xf7\xf7\xff\x9f\x9f\xff~\xff\x7f\xdf\x9d\xff\xf7\xff\xfd\xfb\xff\xff\xfd\xfd\xf7\xff\xed\xff\xff\x7f\xff\xb9\xfd\xfb\xf7\xff\xff\xdf\xff\xff\xdf\xdf\xdf\xff\xff\xbf\x7f\xff\xff\xff\xdf\xbf\xbf\xfe\xfd\xfb\xff\xff\xff\xdf\xdf\xef\xfb\xf7\xfd\xff~\xfe\xff\xbf~\xfe\xfd\xff\xbf\xff~\xfe~\xfe\xff\xff\xfb\xfb\xfb\xf7\xf7\xef\xff\x7f\xfe\xff\x7f\xbf\xed\xff\xff\x7f\xfd\xfb_\xff\xff\xff\xff\xdf\xbf\xef\xef\xef\xff\xff\xfe\xff\xf7\xef\xff\xff\xfb\xff\xff\xff\xff\x7f\xbf\xfd\xf7\xff\xff\xff\xdd\xbb\xff\xff\xff\xff~\xff\xbd\xff\xfd\xef\xef\xbf\xff\xe7\xe7\xdf\xdf\xff\xff\xff\xeb\xe7\xe7\xff\xff\xbf\x7f\xfe}\xff\xbf\xff\xfb\xdf\xe7\xeb\xfb\xdf\xf7\xef\xfd\xfd\xff\xff\xe7\xef\xef\xff\xff\xff\xff\xfe\x7f~\xbd\xff~\xef\xff\xff\xff\xfe\xf7\xff\xff\xef\xef\xf5\xbb\xff\xff\xff\xef\xbf\xf9\xfe\xff\xff\xff\xff\xef\xff\xff\x7f\xff\xff\xbf\xff\xff\xff\xfe\xfe\xdf\xfb\xff\x7f\xff\xff\xfa\xdf\xef\xef\xef\xff\xef\xfb\xef\xbf\xfd~\xfe\xff\xfb~~\xff\xff\xff\xff\x7f\xfe~~\xff\xff\xfb\xfb\xfb\xef\xff\xe7\xf7\xfe\x7f\xfe\xbf\xfd\xbf\xbf\xfd\xbf\xdf\xff\xff~~\xbf\xfd\xff\xff\xdf\xef\xe7\xf7\xfb\xff\xff\x7f\xfe\xff\xff\x7f\xee\xff\x7f\xfe\xff\xfd\x9d\xff\xff\xfe\xff\xdf\xfb\xff\xff\xff\xff\xff\xff\xff\xf7\xff\xff\xff\xff\xff\xff\xff\xef\xeb_\xff\xff\xff\xff\xff\xfd\xef~\xff\xff\xff~\xfe\xbd\xff\xf7\xe7\xe7\xdf\xff\xe7\xef\xff\xff\xff\xff\xe7\xef\xf7\xe7\xdf\xbf\xff\xbe\x7f~\xff\x7f\xfe\xeb\xd7\xef\xff\xfb\xdf\xff\xeb\xdf\xff\xff\xff\xf7\xeb\xdf\xff\xff\xff\xbb\x7f\xfe~\xbd\xff\x7f\xff\xff\xff\xf7\xef\xf7\xf7\xff\xf7\xff\xdd\xdb\xff\xff\xf7\xef\xbf\xfe\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xfe\xff\xff\xff\xff\xb5\xfd\xfb\xff\xff\x7f\xfe\xfe\xdf\xf7\xff\xff\xff\xef\xe7\xef\xbf\x7f~\xfe\xff\xfd~\xfe\xfd\xff\xff\xff~\xfe\xff\x7f\xfb\xfd\xff\xf7\xe7\xef\xff\xf7\xef\xdf\xef\xff\xbf\xdf\xff\xff\xff\xff\xff\xdf\xff\xbf\xbf\xfd\xfd\xff\xfb\xff\xff\xff\xfb\xff\xff\xff\xf7\xff\xef\xfb\x7f\xdf\x9f\xdf\xbf\xad\xff\x7f\xfe\xff\xffw\xfd\xff\xb9\xdd\xfb\xfe\xf7\xff\xff\xff~\xff\x7f\xfd\xfd\xfd\xdb\xfb\xff\xef\xf7\xef\xff\xf7\xff\xdf\xdb\xff\xfd\xbf\xbf\xbf~\xbe\x7f\xff\xbd\xff\xff\xdf\xff\xff\xbf\xff\xfb\xbf\xff\xe7\xdf\xff\xfd\xff\xff\xff\xfb\xff\xfb~~\xfe\xbd\xff\xfd\xfb\xff\xff\xff\xff\xff\xff\xfb\xd7\xff\xff\xfb\xdf\xff\xff\xff\xff\xdf\xff\xff\xff\xff\xff~\xf7\xbf\xbf\xbb\xff\xfa\xd7\xff\xff\xff\xf7\xff\xef\x7f\xff\xdb\x9f\xfd\xfd\xfe\xff\xff\xf7\xf7\xff\xff\xf7\xfa\xfb\xb9\xbf\xffw\xfe\xff\x7f\xee\xff\xfd\xad\xdf\xfb_\xef\x7f\xf7\xf7\xef\xff\xfb\xdf\xff\xff\xff\xff\xff\xfb\xfd\xbf\xfd\xfe\xbf\xdf\xff\xff\xff\xff\xff\xff\xdf')
fb = framebuf.FrameBuffer(buf, 200, 200, framebuf.MONO_HLSB)
#fbp.scroll(-40,0)
e.set_frame_memory(buf, 0, 0, w, h)
e.display_frame()

e.sleep()